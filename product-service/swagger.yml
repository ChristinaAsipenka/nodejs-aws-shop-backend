openapi: 3.0.1
info:
  title: Product Service API
  description: This is an API for managing products.
  version: 1.0.0
servers:
  - url: https://1pcdcu2oob.execute-api.eu-west-1.amazonaws.com/prod
    description: Development server
    variables:
      restapi_id:
        default: 1pcdcu2oob
      region:
        default: eu-west-1
paths:
  /products:
    get:
      summary: Get list of products
      operationId: getProductsList
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:{region}:lambda:path/2015-03-31/functions/arn:aws:lambda:{region}:{account_id}:function:getProductsList/invocations
        httpMethod: POST
        type: aws_proxy
        responses: {}
    post:
      summary: Create a new product
      operationId: createProduct
      requestBody:
        description: Product object to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProduct'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Missing or invalid required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Missing or invalid required fields
        '500':
          description: Failed to create product
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to create product
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:{region}:lambda:path/2015-03-31/functions/arn:aws:lambda:{region}:{account_id}:function:createProduct/invocations
        httpMethod: POST
        type: aws_proxy
        responses: {}
  /product/{id}:
    get:
      summary: Get product by ID
      operationId: getProduct
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: ID parameter is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ID parameter is required
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:{region}:lambda:path/2015-03-31/functions/arn:aws:lambda:{region}:{account_id}:function:getProduct/invocations
        httpMethod: POST
        type: aws_proxy
        responses: {}
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: "1"
        title:
          type: string
          example: "Product_1"
        price:
          type: number
          example: 10
        description:
          type: string
          example: "Short Product Description1"
        count:
          type: integer
          example: 100
    NewProduct:
      type: object
      properties:
        title:
          type: string
          example: "New Product"
        description:
          type: string
          example: "Description of the new product"
        price:
          type: number
          example: 99.99
        count:
          type: integer
          example: 100
      required:
        - title
        - description
        - price
        - count
